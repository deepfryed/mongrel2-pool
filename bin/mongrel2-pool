#!/usr/bin/env ruby

require 'optparse'

MONGREL2_POOL_STARTUP = $0 + ' ' + ARGV.join(' ')

paths    = []
help     = false
rackfile = Dir.pwd + '/config.ru'

def usage
  %q{

    mongrel2-pool [options] command

    options:

    -h        displays this help.
    -I path   include this path.
    -R name   use this rackfile, defaults to config.ru in current directory.

    command can be one of

    start     starts the server pool.
    stop      stops the server pool.
    restart   graceful restart of server pool.
    kill      kill the server and workers, smite them with fiery vengeance.

  }
end

parser = OptionParser.new do |opt|
  opt.on('-h',      '--help')                  { help = true }
  opt.on('-I name', '--include  name', String) {|name| paths   << name }
  opt.on('-R name', '--rackfile file', String) {|name| rackfile = name }
end

begin
  parser.parse!
rescue OptionParser::ParseError => e
  puts ""
  puts "[ERROR} #{e.message}"
  puts usage
  exit 1
end

if help
  puts usage
  exit
end

paths.each {|path| $:.unshift(path)}

require 'mongrel2-pool'
require 'mongrel2/pool/runner'

case ARGV.last
  when 'start'   then load(rackfile) && Mongrel2::Pool.runner.start
  when 'stop'    then load(rackfile) && Mongrel2::Pool.runner.stop
  when 'restart' then load(rackfile) && Mongrel2::Pool.runner.restart
  when 'kill'    then load(rackfile) && Mongrel2::Pool.runner.kill
  else
    if ARGV.last.nil? or ARGV.last.empty?
      puts "ERROR: missing command [start|stop|restart|kill]"
    else
      puts "ERROR: Invalid command #{ARGV.last}"
    end
    puts usage
    exit 1
end
